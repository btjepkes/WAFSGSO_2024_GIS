[
  {
    "objectID": "spatial-data-in-R.html",
    "href": "spatial-data-in-R.html",
    "title": "4. Spatial Data in R",
    "section": "",
    "text": "R is a powerful programming language used for data analysis and visualization\nWide range of packages and libraries, making it suitable for various scientific disciplines, including spatial data analysis in wildlife and fisheries science\n\n\n\n\n\nIntegrated development environment for R (and Python, Julia)\nInterface with data sources and tables, allows for code completion and syntax highlighting\nAlternatives = VSCode, Jupyter Notebook\n\n\n\n\nRStudio interface"
  },
  {
    "objectID": "spatial-data-in-R.html#what-is-r-and-rstudio",
    "href": "spatial-data-in-R.html#what-is-r-and-rstudio",
    "title": "4. Spatial Data in R",
    "section": "",
    "text": "R is a powerful programming language used for data analysis and visualization\nWide range of packages and libraries, making it suitable for various scientific disciplines, including spatial data analysis in wildlife and fisheries science\n\n\n\n\n\nIntegrated development environment for R (and Python, Julia)\nInterface with data sources and tables, allows for code completion and syntax highlighting\nAlternatives = VSCode, Jupyter Notebook\n\n\n\n\nRStudio interface"
  },
  {
    "objectID": "spatial-data-in-R.html#why-use-r-for-spatial-data",
    "href": "spatial-data-in-R.html#why-use-r-for-spatial-data",
    "title": "4. Spatial Data in R",
    "section": "Why Use R for Spatial Data?",
    "text": "Why Use R for Spatial Data?\n\nOpen source (free) option to build maps, perform analyses, and convert data\n\nIf working with non-profits or in academia, many entities have expertise in R\n\nAllows for reproducible science and workflows (sound familiar?)\n\nSupplementary material for manuscripts\nCo-workers can use entire scripts or snippets to update models and maps\n\nIntegrates with thousands of other R packages for modeling, spatial statistics, and visualization\nWell-documented and plenty of examples from a continuously growing community of R users"
  },
  {
    "objectID": "spatial-data-in-R.html#basics-of-r-programming",
    "href": "spatial-data-in-R.html#basics-of-r-programming",
    "title": "4. Spatial Data in R",
    "section": "Basics of R Programming",
    "text": "Basics of R Programming\nEach programming language has specific ways of doing things, and R is no different. The following section contains a general introduction to R classes and data types.\n\nData Classes\n\nNumeric\nNumeric data class represents continuous numerical values.\n\n# Print a numeric vector\nc(3.14, 2.718, -10, 100.5)\n\n[1]   3.140   2.718 -10.000 100.500\n\n\n\n\nInteger\nInteger data class represents whole numbers without decimal points.\n\n# Print an integer vector\nc(1L, 2L, -5L, 100L)\n\n[1]   1   2  -5 100\n\n\n\n\nCharacter\nCharacter data class represents text strings.\n\n# Creating a character vector\nc(\"apple\", \"banana\", \"cherry\")\n\n[1] \"apple\"  \"banana\" \"cherry\"\n\n\n\n\nFactor\nFactor data class represents categorical variables with a fixed set of possible values.\n\n# Creating a factor vector\nfactor(c(\"male\", \"female\", \"female\", \"male\"),\n       # specify levels\n       levels = c(\"male\", \"female\"))\n\n[1] male   female female male  \nLevels: male female\n\n\n\n\nLogical\nLogical data class represents binary values indicating true or false.\n\n# Creating a logical vector\nc(TRUE, FALSE, TRUE, TRUE)\n\n[1]  TRUE FALSE  TRUE  TRUE\n\n# Specify binary as logical\nas.logical(c(1,1,0,1,0))\n\n[1]  TRUE  TRUE FALSE  TRUE FALSE\n\n\n\n\n\nData Types/Structures\n\nVectors:\nOne-dimensional arrays that can hold numeric, character, or logical values.\n\n# Numeric vector\nc(1, 2, 3, 4, 5)\n\n[1] 1 2 3 4 5\n\n# Character vector\nc(\"apple\", \"banana\", \"orange\", \"grape\", \"kiwi\")\n\n[1] \"apple\"  \"banana\" \"orange\" \"grape\"  \"kiwi\"  \n\n# Logical vector\nc(TRUE, FALSE, TRUE, FALSE, TRUE)\n\n[1]  TRUE FALSE  TRUE FALSE  TRUE\n\n\n\n\nMatrices:\nTwo-dimensional arrays with rows and columns of the same data type.\n\n# Create a matrix\n# Create a 3x3 matrix with data filled by row-wise\nmatrix(1:9, nrow = 3, ncol = 3, byrow = TRUE) \n\n     [,1] [,2] [,3]\n[1,]    1    2    3\n[2,]    4    5    6\n[3,]    7    8    9\n\n\n\n\nData Frames:\nTabular data structures, similar to spreadsheets, consisting of rows and columns.\n\n# Create a data frame\ndata.frame(\n  Name = c(\"John\", \"Alice\", \"Bob\", \"Emily\"),\n  Age = c(25, 30, 35, 28),\n  Gender = c(\"Male\", \"Female\", \"Male\", \"Female\"),\n  stringsAsFactors = FALSE\n)\n\n   Name Age Gender\n1  John  25   Male\n2 Alice  30 Female\n3   Bob  35   Male\n4 Emily  28 Female\n\n\n\n\nLists:\nCollections of objects, which can be of different data types.\n\nlist(\n  numeric_vector = c(1, 2, 3),\n  character_vector = c(\"a\", \"b\", \"c\"),\n  matrix_data = matrix(1:4, nrow = 2),\n  data_frame = data.frame(\n    Name = c(\"John\", \"Alice\"),\n    Age = c(25, 30),\n    stringsAsFactors = FALSE\n  )\n)\n\n$numeric_vector\n[1] 1 2 3\n\n$character_vector\n[1] \"a\" \"b\" \"c\"\n\n$matrix_data\n     [,1] [,2]\n[1,]    1    3\n[2,]    2    4\n\n$data_frame\n   Name Age\n1  John  25\n2 Alice  30\n\n\n\n\n\nBasic Operations\n\nArithmetic operations:\nThese run mathematical operations on two or more elements.\n\n# Addition\n10 + 5\n\n[1] 15\n\n# Subtraction\n10 - 5\n\n[1] 5\n\n# Multiplication\n10 * 5\n\n[1] 50\n\n# Division\n10 / 5\n\n[1] 2\n\n# Explonetiation\n10 ^ 5\n\n[1] 1e+05\n\n# Square root\nsqrt(10)\n\n[1] 3.162278\n\n\n\n\nLogical operations:\nThese assess relationships between two or more elements.\n\n# Less than\n10 &lt; 5\n\n[1] FALSE\n\n# Greater than\n10 &gt; 5\n\n[1] TRUE\n\n# Equal to\n10 == 5\n\n[1] FALSE\n\n# Not equal to\n10 != 5\n\n[1] TRUE\n\n\n\n\nAssignment operators:\nThese assign values or groups of values to an object that is stored in memory.\n\n# Assigning numeric\nvar_1 &lt;- 10\nvar_1\n\n[1] 10\n\n# Assigning character strings\nvar_2 &lt;- \"species\"\nvar_2\n\n[1] \"species\"\n\n# Assigning vector of strings\nvar_3 &lt;- c(\"sppA\", \"sppB\", \"sppC\")\nvar_3\n\n[1] \"sppA\" \"sppB\" \"sppC\"\n\n\n\n\nFunction calls:\nThese pass a series of arguments to a pre-defined process, called a function.\nname_of_function(argument_1 = value_1,\n                 argument_2 = value_2,\n                 argument_3 = value_3)"
  },
  {
    "objectID": "spatial-data-in-R.html#r-packages",
    "href": "spatial-data-in-R.html#r-packages",
    "title": "4. Spatial Data in R",
    "section": "R Packages",
    "text": "R Packages\nPackages in R are collections of functions curated by developers to make life easier. They extend the functionality by providing additional tools, common workflows, and accessible datasets.\n\nInstalling & Loading Packages\nR packages can generally be downloaded/installed via two primary methods. (1) from the CRAN - Comprehensive R Archive Network, or (2) from a GitHub repository containing the package. While many popular packages are on CRAN, specific application packages might only be available on GitHub.\n# Installing packages from CRAN\ninstall.packages(\"package_name\")\n\n# Installing packages from GitHub\n  ## Install and load the remotes package (if not already installed)\n  if (!requireNamespace(\"remotes\", quietly = TRUE)) {\n    install.packages(\"remotes\")}\n  library(remotes)\n  ## Install the package from the GitHub repository\n  install_github(\"username/repository\")\n\n# Loading any installed package\nlibrary(package_name)\n\n\nThe Tidyverse\nThe tidyverse is a collection of R packages designed for data science and statistical analysis. It provides a cohesive framework for working with data by emphasizing consistency, readability, and efficiency.\n# Installing the tidyverse entirely, note the name as a string\ninstall.packages(\"tidyverse\")\nThe core philosophy of the tidyverse centers around the principles outlined in the “tidy data” concept, where datasets are organized in a structured format with each variable forming a column, each observation forming a row, and each type of observational unit forming a table.\n\nggplot2 - for creating static and interactive visualizations\ndplyr - for data manipulation, filtering, and summarizing\ntidyr - for getting data into tidy wide and tidy long formats\nreadr - for reading flat files, like .csv and .tsv\npurrr - for working with functions and vectors\ntibble - for easy handling of tidy dataframes\nstringr - for working with strings\nforcats - for working with factors (categorical data)\n\nThe tidyverse also introduced the pipe (%&gt;%) which allows the chaining of functions. RStudio now has a native pipe (|&gt;) that works with a variety of non-tidyverse packages. Note: ctrl+shift+M = shortcut\n# Example code with piped functions, note the native R pipe used\npresent_veg_area &lt;- present_veg_sf |&gt; \n  mutate(BeaverVegCat = as.factor(BeaverVegCat)) |&gt; \n  group_by(LandscapeID, BeaverVegCat, Survey_Year) |&gt; \n  summarise(total_veg_area_m2 = sum(area_m2, na.rm = TRUE)) |&gt; \n  arrange(LandscapeID)"
  },
  {
    "objectID": "spatial-data-in-R.html#common-r-spatial-packages",
    "href": "spatial-data-in-R.html#common-r-spatial-packages",
    "title": "4. Spatial Data in R",
    "section": "Common R Spatial Packages",
    "text": "Common R Spatial Packages\nThere are likely over 100 R packages that can handle some aspect of spatial data, these are the most popular ones that we will explore some in the workshop. A more comprehensive list can be found here: https://cran.r-project.org/web/views/Spatial.html\nSpatial packages in R are currently in a transition period, with many historically common packages being replaced by newer, more performant varieties. E.g., sp, rgdal, rgeos, and raster are deprecated along with their spatial object types, but are often still dependencies.\nNote:  indicates packages utilized in this workshop.\n\nFor General Spatial Data Handling\n\nsf - for working with vector spatial data \nterra - for working with raster spatial data \nstars - for working with spatial time series (vector and raster data cubes)\nspatstat - for spatial statistics, focusing on spatial point patterns\nsfnetworks - for analysis of geospatial networks\ngeometa - for writing and reading OGC/ISO geographic metadata in R\nncdf4 - for reading, writing, and manipulating netCDF files\nmapedit - for drawing, editing, and deleting spatial data interactively in R\n\n\n\nFor Ecology & Natural Resources\n\nrgbif - interface with the GBIF to download and view species occurrence records from database\nlandscapemetrics - for landscape ecology metric calculations (FRAGSTATS for R)\nspatialEco - for spatial analysis and modelling of ecological systems\nade4 - some capabilities for spatial multivariate analysis methods for ecology\nadehabitatHR - a collection of tools for analyzing wildlife habitat selection and spatial ecology\ndismo - tools for species distribution modeling and ecological niche modeling\n\n\n\nFor Mapping & Cartography\n\nggplot2 - creating static maps in the grammar of graphics style \ntmap - simple thematic maps, including both static and interactive map options \nmapsf - simple map creation using sf objects in the ggplot2 system, successor of cartography\nleaflet - for creating interactive web maps, including popups and basemaps\nmapview - provides an interactive viewer for exploring spatial data \nplotly - turns maps built with ggplot2 into interactive charts\nggspatial - adds spatial geometries and annotations to ggplot2\n\n\n\nFor Getting Spatial Data\n\nrnaturalearth - state and national boundaries across the United States and world\ntidycensus - population, state boundaries, and other census metrics\ntigris - TIGER/Line files (i.e., roads, highways) from U.S. Census\ngeodata - diverse source of climate, elevation, admin boundaries, land use, and more\nelevatr - elevation rasters across the world\nosmdata - any and all Open Street Map features, including roads, buildings, and more\nspocc - many species occurrence repositories, including GBIF, BISON, iNaturalist, eBird"
  },
  {
    "objectID": "spatial-data-in-R.html#loading-spatial-data-into-r",
    "href": "spatial-data-in-R.html#loading-spatial-data-into-r",
    "title": "4. Spatial Data in R",
    "section": "Loading Spatial Data Into R",
    "text": "Loading Spatial Data Into R\n\nVector Data\n\n\nRaster Data"
  },
  {
    "objectID": "spatial-data-in-R.html#mapping-spatial-data-in-r",
    "href": "spatial-data-in-R.html#mapping-spatial-data-in-r",
    "title": "4. Spatial Data in R",
    "section": "Mapping Spatial Data In R",
    "text": "Mapping Spatial Data In R\n\nggplot\n\n\ntmap\n\n\nmapview"
  },
  {
    "objectID": "slides/outline.html#follow-along",
    "href": "slides/outline.html#follow-along",
    "title": "GIS for Fisheries and Wildlife Sciences",
    "section": "Follow Along…",
    "text": "Follow Along…\n\n\n\nAdd in link to course documents/site."
  },
  {
    "objectID": "slides/outline.html#housekeeping",
    "href": "slides/outline.html#housekeeping",
    "title": "GIS for Fisheries and Wildlife Sciences",
    "section": "Housekeeping",
    "text": "Housekeeping\n\n\n\nSchedule\n4 hours, including instruction and hands-on exercises.\nBreaks\nAfter each hour, 5-10 minute break.\nQuestions\nRaise hand or write down and ask during breaks."
  },
  {
    "objectID": "slides/outline.html#course-objectives",
    "href": "slides/outline.html#course-objectives",
    "title": "GIS for Fisheries and Wildlife Sciences",
    "section": "Course Objectives",
    "text": "Course Objectives\n\n\n\n\nProvide an overview of GIS concepts and data types\nIntroduce ArcGIS Pro (interface, projects, resources)\nDemonstrate common spatial operations and tools\nWork through an example of programmatic GIS (python)\nExplore a variety of other tools and integrations"
  },
  {
    "objectID": "slides/outline.html#workshop-instructors",
    "href": "slides/outline.html#workshop-instructors",
    "title": "GIS for Fisheries and Wildlife Sciences",
    "section": "Workshop Instructors",
    "text": "Workshop Instructors\n\n\n\n\n\nBenjamin Tjepkes\n\nGraduate Student\nGeography\n\n\nWesley Fitzsimmons\n\nGraduate Student\nFisheries and Wildlife"
  },
  {
    "objectID": "slides/outline.html#looking-for-gis-courses",
    "href": "slides/outline.html#looking-for-gis-courses",
    "title": "GIS for Fisheries and Wildlife Sciences",
    "section": "Looking for GIS Courses?",
    "text": "Looking for GIS Courses?\n\nLearn More: Geography Course Offerings\n\nThe MU Geography Department has several:\n\nCartography\nIntro GIS\nAdvanced GIS\nSpatial Analysis\nRemote Sensing"
  },
  {
    "objectID": "slides/outline.html#what-is-gis",
    "href": "slides/outline.html#what-is-gis",
    "title": "GIS for Fisheries and Wildlife Sciences",
    "section": "What is GIS?",
    "text": "What is GIS?\n\n\n\n\nStarted simply as a way to store and query spatial data\nCapable ecosystem of tools & techniques"
  },
  {
    "objectID": "slides/outline.html#why-learn-gis",
    "href": "slides/outline.html#why-learn-gis",
    "title": "GIS for Fisheries and Wildlife Sciences",
    "section": "Why Learn GIS?",
    "text": "Why Learn GIS?\n\n\n\n\nEverywhere is somewhere\nAdds another dimension to data\nJOBS!"
  },
  {
    "objectID": "slides/outline.html#spatial-data-types",
    "href": "slides/outline.html#spatial-data-types",
    "title": "GIS for Fisheries and Wildlife Sciences",
    "section": "Spatial Data Types",
    "text": "Spatial Data Types\nHow the surface of the Earth is represented digitally\n\nSpatial coordinates = X, Y, sometimes Z\nTypes of spatial data models (types)\n\nVector\nRaster\nNetworks\n\nMany file formats / extensions for each\n\nExamples: .tiff, .shp, .gdb"
  },
  {
    "objectID": "slides/outline.html#vector-data",
    "href": "slides/outline.html#vector-data",
    "title": "GIS for Fisheries and Wildlife Sciences",
    "section": "Vector Data",
    "text": "Vector Data\nRepresents space as points, lines, and polygons\n\nSource: Carto"
  },
  {
    "objectID": "slides/outline.html#vector-file-formats",
    "href": "slides/outline.html#vector-file-formats",
    "title": "GIS for Fisheries and Wildlife Sciences",
    "section": "Vector File Formats",
    "text": "Vector File Formats"
  },
  {
    "objectID": "slides/outline.html#raster-data",
    "href": "slides/outline.html#raster-data",
    "title": "GIS for Fisheries and Wildlife Sciences",
    "section": "Raster Data",
    "text": "Raster Data\nRepresents space as a grid of pixels\n\nSource: Carto\nLearn more: Navigation"
  },
  {
    "objectID": "slides/outline.html#raster-file-formats",
    "href": "slides/outline.html#raster-file-formats",
    "title": "GIS for Fisheries and Wildlife Sciences",
    "section": "Raster File Formats",
    "text": "Raster File Formats"
  },
  {
    "objectID": "slides/outline.html#data-type-considerations",
    "href": "slides/outline.html#data-type-considerations",
    "title": "GIS for Fisheries and Wildlife Sciences",
    "section": "Data Type Considerations",
    "text": "Data Type Considerations\n\n\n\nRaster is faster, but vector seems more correcter\n\nSpatial data files do their best to represent the world\nAccuracy needs will depend on each use case\n\nMapping an entire state vs. a single forest stand\nEach sensor and GPS receiver will vary"
  },
  {
    "objectID": "slides/outline.html#projections-aka-crs",
    "href": "slides/outline.html#projections-aka-crs",
    "title": "GIS for Fisheries and Wildlife Sciences",
    "section": "Projections (aka CRS)",
    "text": "Projections (aka CRS)\nRepresenting a 3D sphere on a 2D surface\n\nOften the most confusing part of introductory GIS\nNo perfect projection exists (prioritize for needs)\nDifferent regions and states have their own projections\nMany software have on-the-fly projection\nLayers need to have same CRS for spatial operations"
  },
  {
    "objectID": "slides/outline.html#crs-nomenclature",
    "href": "slides/outline.html#crs-nomenclature",
    "title": "GIS for Fisheries and Wildlife Sciences",
    "section": "CRS Nomenclature",
    "text": "CRS Nomenclature\nDifferent ways to reference a CRS.\n\nEnglish Name\nWKT ~ Well Known Text\nEPSG\nPROJ.4"
  },
  {
    "objectID": "slides/outline.html#software-programs",
    "href": "slides/outline.html#software-programs",
    "title": "GIS for Fisheries and Wildlife Sciences",
    "section": "Software & Programs",
    "text": "Software & Programs\n\n\nProprietary\n\nArcGIS Pro\nCadcorp\nMAPublisher\nCarto\n\n\nOpen-Source*\n\nQGIS\nGRASS GIS\nGeoDa\nR / Python / Julia\n\n*Many open-source software have paid tiers for extending functionality or rely on paid services for sharing"
  },
  {
    "objectID": "slides/outline.html#web-geospatial-tools",
    "href": "slides/outline.html#web-geospatial-tools",
    "title": "GIS for Fisheries and Wildlife Sciences",
    "section": "Web Geospatial Tools",
    "text": "Web Geospatial Tools\n\nArcGIS Online\nGoogle Earth Engine\nLeaflet\nMapbox\nMango Map\nFelt"
  },
  {
    "objectID": "slides/outline.html#common-file-types",
    "href": "slides/outline.html#common-file-types",
    "title": "GIS for Fisheries and Wildlife Sciences",
    "section": "Common File Types",
    "text": "Common File Types\nHow spatial data and attributes are stored and transferred"
  },
  {
    "objectID": "slides/outline.html#apps-for-field-collection",
    "href": "slides/outline.html#apps-for-field-collection",
    "title": "GIS for Fisheries and Wildlife Sciences",
    "section": "Apps for Field Collection",
    "text": "Apps for Field Collection\n\nEsri: Esri Field Maps – ArcGIS Online – ArcGIS Pro\nQGIS: QField or Mergin Maps – QGIS\nAvenza Maps – Works with multiple programs"
  },
  {
    "objectID": "slides/outline.html#why-use-scripting-for-gis",
    "href": "slides/outline.html#why-use-scripting-for-gis",
    "title": "GIS for Fisheries and Wildlife Sciences",
    "section": "Why use scripting for GIS?",
    "text": "Why use scripting for GIS?\n\nAllows for reproducible science and workflows\n\nSupplementary material for manuscripts\n\nTurns repetitive tasks into simple tools\nSome tools are only available in the coding interface\nIntegrates with other tools and methods\n\nModules, extensions, APIs\nData wrangling and visualization"
  },
  {
    "objectID": "slides/outline.html#why-use-r-for-spatial-analysis",
    "href": "slides/outline.html#why-use-r-for-spatial-analysis",
    "title": "GIS for Fisheries and Wildlife Sciences",
    "section": "Why Use R for Spatial Analysis?",
    "text": "Why Use R for Spatial Analysis?\n\n\n\n\nAll the cool researchers are using it\n\nlibrary(sf)"
  },
  {
    "objectID": "slides/outline.html#contact-resources",
    "href": "slides/outline.html#contact-resources",
    "title": "GIS for Fisheries and Wildlife Sciences",
    "section": "Contact & Resources",
    "text": "Contact & Resources\nReach out with inquiries:\n\nBenjamin Tjepkes ~ bwtbgm@missouri.edu\nWesley Fitzsimmons ~ waf8xt@missouri.edu\n\nWorkshop Resources:\nTinyURL\n\n\n\n\n© The Authors | 2024.03.20"
  },
  {
    "objectID": "resources.html",
    "href": "resources.html",
    "title": "Resources",
    "section": "",
    "text": "GISGeography ~ All things GIS.\nGIS Term Dictionary ~ Various and general GIS definitions.\nGDAL ~ File formats and conversions.\nPennState GEOG 486 ~ Cartography and spatial data visualization."
  },
  {
    "objectID": "resources.html#general-gis",
    "href": "resources.html#general-gis",
    "title": "Resources",
    "section": "",
    "text": "GISGeography ~ All things GIS.\nGIS Term Dictionary ~ Various and general GIS definitions.\nGDAL ~ File formats and conversions.\nPennState GEOG 486 ~ Cartography and spatial data visualization."
  },
  {
    "objectID": "resources.html#arcgis-pro",
    "href": "resources.html#arcgis-pro",
    "title": "Resources",
    "section": "ArcGIS Pro",
    "text": "ArcGIS Pro\n\nEsri Spatial Statistics Resources ~ Tutorials on using spatial analysis tools in the Esri environment.\nEsri Training ~ Main education and training page for ArcGIS suite of products."
  },
  {
    "objectID": "resources.html#projections",
    "href": "resources.html#projections",
    "title": "Resources",
    "section": "Projections",
    "text": "Projections\n\nEPSG Projections ~ Projection codes and help selecting projections."
  },
  {
    "objectID": "resources.html#spatial-data-in-r",
    "href": "resources.html#spatial-data-in-r",
    "title": "Resources",
    "section": "Spatial Data in R",
    "text": "Spatial Data in R\n\nMapping in ggplot with sf ~ R-Spatial page on sf and ggplot.\nSpatial Data Science Book ~ Ebook on all things spatial data science in R.\nGeocomputation with R ~ Another ebook on geostatisitcs in R.\nR-ArcGIS Bridge ~ Overview of R-ArcGIS Bridge capabilities.\nCRAN Spatial Task View ~ Contributed packages dealing with spatial data on CRAN."
  },
  {
    "objectID": "resources.html#data-sources",
    "href": "resources.html#data-sources",
    "title": "Resources",
    "section": "Data Sources",
    "text": "Data Sources\n\nlterdatasampler ~ R package with sample LTER data\nOpen Land Map ~ Data portal to the world’s environmental data\nEarth Map ~ Tool for quick multi-temporal environmental and climate analysis"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Getting Started",
    "section": "",
    "text": "This workshop, GIS for Fisheries and Wildlife Sciences, provides a general introduction to GIS workflows and programming in the natural sciences. Topics will cover common data types, spatial operations, data visualization, and other tools used across the breadth of wildlife and fisheries research. No prior GIS experience is assumed, but might be helpful when following the more advanced portions of this workshop. High-level coding languages (e.g., Python and R) will also be included."
  },
  {
    "objectID": "index.html#workshop-description",
    "href": "index.html#workshop-description",
    "title": "Getting Started",
    "section": "",
    "text": "This workshop, GIS for Fisheries and Wildlife Sciences, provides a general introduction to GIS workflows and programming in the natural sciences. Topics will cover common data types, spatial operations, data visualization, and other tools used across the breadth of wildlife and fisheries research. No prior GIS experience is assumed, but might be helpful when following the more advanced portions of this workshop. High-level coding languages (e.g., Python and R) will also be included."
  },
  {
    "objectID": "index.html#workshop-objectives",
    "href": "index.html#workshop-objectives",
    "title": "Getting Started",
    "section": "Workshop Objectives",
    "text": "Workshop Objectives\nThe primary objective of this workshop is provide exposure to a variety of GIS systems available for working with spatial data for fisheries and wildlife projects.\n\nTo provide an overview of GIS concepts and data types.\nTo introduce ArcGIS Pro (interface, projects, resources).\nTo demonstrate common spatial operations and tools.\nTo work through an example of programmatic GIS (Python).\nTo explore a variety of other tools and integrations (e.g., R)."
  },
  {
    "objectID": "index.html#data-downloads",
    "href": "index.html#data-downloads",
    "title": "Getting Started",
    "section": "Data Downloads",
    "text": "Data Downloads\nStart by downloading workshop files here: Workshop Files (Zipped) – need to add.\n\nData used for this workshop came from the following:  Eklund, Daniel A.; Donner, Deahn M.; Beck, Albert J.; Rugg, David J. 2023. Beaver colonization events on managed streams in the Chequamegon-Nicolet National Forest, Wisconsin. Fort Collins, CO: Forest Service Research Data Archive. https://doi.org/10.2737/RDS-2023-0019"
  },
  {
    "objectID": "index.html#workshop-schedule",
    "href": "index.html#workshop-schedule",
    "title": "Getting Started",
    "section": "Workshop Schedule",
    "text": "Workshop Schedule\nThis workshop is set to take approximately 4 hours to complete and will cover a diverse range of GIS topics. The following schedule outlines the general sections for each topic covered.\n\n\n\n\n\nTitle\n\n\nSubtitle\n\n\n\n\n\n\n1. GIS Concepts\n\n\nData types, file formats, projections, software, and tools.\n\n\n\n\n2. Intro to ArcGIS Pro\n\n\nInterface, catalog, adding data, symbology, layouts, tools.\n\n\n\n\n3. Scripting in ArcGIS Pro\n\n\nJupyter, ArcPy, visualization, and workflows.\n\n\n\n\n4. Spatial Data in R\n\n\nVector and raster packages, spatial operations, and cartography.\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "gis-concepts.html",
    "href": "gis-concepts.html",
    "title": "1. GIS Concepts",
    "section": "",
    "text": "GIS = Geographic Information System\n\nThe tool that we use to capture, store, process, analyze, and visualize spatial information.\nHelps us understand and assess patterns in spatial locations and attributes about those locations.\n\n\n\n\n\nFirst Law of Geography (Tobler’s Law): “Everything is related to everything else, but near things are more related than distant things.”"
  },
  {
    "objectID": "gis-concepts.html#introduction",
    "href": "gis-concepts.html#introduction",
    "title": "1. GIS Concepts",
    "section": "",
    "text": "GIS = Geographic Information System\n\nThe tool that we use to capture, store, process, analyze, and visualize spatial information.\nHelps us understand and assess patterns in spatial locations and attributes about those locations.\n\n\n\n\n\nFirst Law of Geography (Tobler’s Law): “Everything is related to everything else, but near things are more related than distant things.”"
  },
  {
    "objectID": "gis-concepts.html#spatial-data-types",
    "href": "gis-concepts.html#spatial-data-types",
    "title": "1. GIS Concepts",
    "section": "Spatial Data Types",
    "text": "Spatial Data Types\nHow the surface of the Earth is represented digitally.\n\nSpatial coordinates = X, Y, sometimes Z\nTypes of spatial data models (types)\n\nVector\nRaster\nNetworks\n\nMany file formats / extensions for each\n\nExamples: .tiff, .shp, .gdb\n\n\n\nVector\nRepresents space as points, lines, and polygons.\n\nPoints – single vertex\nLines – two or more vertices\nPolygon – three or more vertices with the last vertex equal to the first\n\n\n\n\nVector data model example. Source: Carto\n\n\n\nCommon Vector Data Types:\nMore than 80 different vector file types available across software and systems!\n\nNetCDF\n\n\n\n\nRaster\nRepresents space as a grid of pixels or cells.\n\n\n\nRaster data model example. Source: Carto\n\n\n\nCommon Raster Data Types:\n\n\n\n\n\n\nData Type Considerations\n\nRaster is faster, but vector seems more correcter. - Old GIS Adage\n\nSpatial data files do their best to represent the world. Accuracy needs will depend on each use case. Mapping an entire state vs. a single forest stand. Each sensor and GPS receiver will vary.\nRaster Advantages:\nRaster Disadvantages:\nVector Advantages:\nVector Disadvantages:\n\n\nA Note on Shapefiles\nStop Using Shapefiles: http://switchfromshapefile.org/\nWhile shapefiles are common and widely supported, there are several downsides:\n\nMulti-file format causes sharing issues\nAttribute (column) names limited to 10 characters\nNo more than 255 total attributes\nTotal size limit of 2 GB\n\n\nAlternatives for Consideration\n\nOGC GeoPackage \n\nLeading replacement for .shp\n\nGeoJSON\n\nVery good for web mapping and transfer\n\nOGC GML\nOGC KML\nEsri GeoDatabase\n\nSuitable if operating within only ESRI products"
  },
  {
    "objectID": "gis-concepts.html#coordinate-reference-systems-crs",
    "href": "gis-concepts.html#coordinate-reference-systems-crs",
    "title": "1. GIS Concepts",
    "section": "Coordinate Reference Systems (CRS)",
    "text": "Coordinate Reference Systems (CRS)\n\nOften the most confusing part of introductory GIS\nLayers need to have same CRS for spatial operations\n\n\nGeographic CRS\n\n\nProjected CRS\nRepresenting a 3D sphere on a 2D surface\n\nNo perfect projection exists (prioritize for needs)\nDifferent regions and states have their own projections\nMany software have on-the-fly projection\n\n\n\n\n\n\n\n\n\n\nMercator\n\n\n\n\n\n\n\nWGS84\n\n\n\n\n\nMollweide (Equal Area)\n\n\n\n\n\n\n\nCRS Nomenclature\n\nEnglish Name\nWKT ~ Well Known Text\nWKID ~ Well Known Identifier (ESRI)\nEPSG\nPROJ.4"
  },
  {
    "objectID": "gis-concepts.html#software-programs",
    "href": "gis-concepts.html#software-programs",
    "title": "1. GIS Concepts",
    "section": "Software & Programs",
    "text": "Software & Programs\nMany different types and levels of GIS software available. See more examples here.\n\nProprietary\n\nArcGIS Pro\nCadcorp\nMAPublisher\nCarto\n\n\n\nOpen-Source\n\nQGIS\nGRASS GIS\nSAGA GIS\nGeoDa\nR / Python / Julia\n\n\n\nOther Web GIS Tools\n\nArcGIS Online\nGoogle Earth Engine\nLeaflet\nMapbox\nMango Map\nFelt"
  },
  {
    "objectID": "gis-concepts.html#field-collection",
    "href": "gis-concepts.html#field-collection",
    "title": "1. GIS Concepts",
    "section": "Field Collection",
    "text": "Field Collection\n\nGPS Recievers\n\n\nMobile Applications\nMany apps available for field data collection.\n\nEsri Field Maps (for Esri)\n\nIntegrates with ArcGIS Online and ArcGIS Pro\nBoth Android and iOS support\n\n\n\nQField or Mergin Maps (for QGIS)\n\nIntegrates with QGIS Cloud environment\n\n\n\nAvenza Maps (for anything)\n\nWorks with multiple programs\n\nCan be used with external GPS receivers (Bad Elf, Garmin GLO), else uses the internal GPS chip."
  },
  {
    "objectID": "gis-concepts.html#spatial-operations",
    "href": "gis-concepts.html#spatial-operations",
    "title": "1. GIS Concepts",
    "section": "Spatial Operations",
    "text": "Spatial Operations\n\nExtraction\n\nClip\nSelect\nSplit\nSplit By Attributes\n\n\n\nOverlay\nTools to overlay multiple feature classes to combine, erase, modify, or update spatial features, resulting in a new feature class. New information is created when overlaying one set of features with another. (Esri)\n\nErase\nIdentity\nIntersect\nSpatial Join\nUnion\nUpdate\n\n\n\nProximity\n\n\nOther\nre-project, dissolve."
  },
  {
    "objectID": "gis-concepts.html#types-of-maps",
    "href": "gis-concepts.html#types-of-maps",
    "title": "1. GIS Concepts",
    "section": "Types of Maps",
    "text": "Types of Maps\n\nhttps://www.e-education.psu.edu/geog486/\n\n\nReference Maps\nUsed for navigation or to identify points of interest.\n\n\nPresentation Maps\nUsed in news articles and in journals.\n\n\nStatistical Maps\n\nChoropleth\nData need to be normalized! Animals per unit area (density) or Attribute per individual (rate)\n\n\nDot Density\n\n\nProportional Symbol\n\n\nCartogram\n\n\nFlow Map\n\n\nDensity Map"
  },
  {
    "objectID": "intro-to-arcgis-pro.html",
    "href": "intro-to-arcgis-pro.html",
    "title": "2. Intro to ArcGIS Pro",
    "section": "",
    "text": "ArcGIS Catalog Structure.\n\n\n\n\n\nGeodatabase structure."
  },
  {
    "objectID": "intro-to-arcgis-pro.html#introduction",
    "href": "intro-to-arcgis-pro.html#introduction",
    "title": "2. Intro to ArcGIS Pro",
    "section": "",
    "text": "ArcGIS Catalog Structure.\n\n\n\n\n\nGeodatabase structure."
  },
  {
    "objectID": "slides.html",
    "href": "slides.html",
    "title": "Slides",
    "section": "",
    "text": "The full presentation can be viewed interactively below. Note that any resources associated with each slide are linked at the bottom. To download a PDF version of this presentation, click here.\n\nNote: To enter full screen view, click into the slide deck and hit the F key on your keyboard."
  },
  {
    "objectID": "slides.html#presentation-slides",
    "href": "slides.html#presentation-slides",
    "title": "Slides",
    "section": "",
    "text": "The full presentation can be viewed interactively below. Note that any resources associated with each slide are linked at the bottom. To download a PDF version of this presentation, click here.\n\nNote: To enter full screen view, click into the slide deck and hit the F key on your keyboard."
  }
]